#@data/values
---
services:
  bats-deps:
    image: busybox
    depends_on:
      - apollo-router
      - redis
      - mongodb
      - oathkeeper
      - kratos
      - price
      # - stablesats
      # - bria
      # - bitcoind
      # - bitcoind-signer
      # - lnd1
      # - lnd2
      # - lnd-outside-1
      # - svix
      # - lnd-outside-2
      - otel-agent
    restart: on-failure:10

  frappe:
    image: busybox
    depends_on:
      - mariadb
      - redis
      - frappe-websocket
      - frappe-backend
      - frappe-frontend
      - frappe-create-site
      - frappe-configurator
    restart: on-failure:10

  integration-deps:
    image: busybox
    depends_on:
      - redis
      - mongodb
      # - bitcoind
      # - bitcoind-signer
      # - stablesats
      # - bria
      # - lnd1
      # - lnd2
      # - lnd-outside-1
      # - lnd-outside-2
      - otel-agent
    restart: on-failure:10
  apollo-router:
    image: ghcr.io/apollographql/router:v1.25.0
    ports: []
    environment:
      - APOLLO_ROUTER_SUPERGRAPH_PATH=/repo/dev/apollo-federation/supergraph.graphql
      - APOLLO_ROUTER_CONFIG_PATH=/repo/dev/apollo-federation/router.yaml
    volumes:
      - ${HOST_PROJECT_PATH:-.}/dev:/repo/dev
    extra_hosts: []
  otel-agent:
    ports: []
    image: otel/opentelemetry-collector-contrib:0.79.0
    command: ["--config=/etc/otel-agent-config.yaml"]
    environment:
      - HONEYCOMB_DATASET=${HONEYCOMB_DATASET}
      - HONEYCOMB_API_KEY=${HONEYCOMB_API_KEY}
    volumes:
      - ${HOST_PROJECT_PATH:-.}/dev/otel-agent-config.yaml:/etc/otel-agent-config.yaml
  price:
    image: lnflash/price:edge
    ports: []
    depends_on:
      - redis
    volumes:
      - ./price-overrides.yaml:/var/yaml/custom.yaml
    environment:
      - REDIS_TYPE=standalone
      - REDIS_0_DNS=redis
      - REDIS_0_PORT=6378
      - IBEX_URL=${IBEX_URL}
      - IBEX_EMAIL=${IBEX_EMAIL}
      - IBEX_PASSWORD=${IBEX_PASSWORD}
  price-history:
    image: docker.io/lnflash/price-history:edge
    # image: us.gcr.io/galoy-org/price-history:edge
    ports: []
    command: ./scripts/run-servers-dev.sh
    environment:
      - DB_HOST=postgres-price-history
      - DB_PORT=5432
      - DB_USER=galoy-price-usr
      - DB_PWD=galoy-price-pwd
      - DB_DB=galoy-price-history
      - DB_POOL_MIN=1
      - DB_POOL_MAX=5
      - DB_DEBUG=false
    depends_on:
      - postgres-price-history
      - price-history-migrate
  price-history-migrate:
    image: docker.io/lnflash/price-history-migrate:edge
    # image: us.gcr.io/galoy-org/price-history-migrate:edge
    ports: []
    environment:
      - DB_HOST=postgres-price-history
      - DB_PORT=5432
      - DB_USER=galoy-price-usr
      - DB_PWD=galoy-price-pwd
      - DB_DB=galoy-price-history
      - DB_POOL_MIN=1
      - DB_POOL_MAX=5
      - DB_DEBUG=false
    depends_on: [postgres-price-history]
  redis:
    image: redis:7.0.8
    ports: []
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
  mongodb-migrate:
    depends_on: [mongodb]
    build:
      context: .
      dockerfile: Dockerfile-migrate
    environment:
      - MONGODB_ADDRESS=mongodb
  mongodb:
    image: mongo:${MONGODB_VERSION:-6.0.5}
    ports: []
    environment:
      - MONGO_INITDB_DATABASE=galoy
  postgres-price-history:
    image: postgres:14.1
    ports: []
    environment:
      - POSTGRES_USER=galoy-price-usr
      - POSTGRES_PASSWORD=galoy-price-pwd
      - POSTGRES_DB=galoy-price-history
  bats-tests:
    image: us.gcr.io/galoy-org/nodejs-concourse
    ports: []
    depends_on:
      - bats-deps
    command: ["make", "execute-bats-from-within-container"]
    working_dir: /repo
    env_file:
      - ${TMP_ENV_CI:-.env.ci}
    environment:
      - GALOY_ENDPOINT=oathkeeper:4455
      - OATHKEEPER_ENDPOINT=http://${OATHKEEPER_HOST:-oathkeeper}:${OATHKEEPER_PORT:-4456}/decisions/
      - HOST_PROJECT_PATH=${PWD}
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
    volumes:
      - ./:/repo
      - /var/run/docker.sock:/var/run/docker.sock
  integration-tests:
    image: us.gcr.io/galoy-org/nodejs-concourse
    depends_on:
      - integration-deps
    command: ["make", "execute-integration-from-within-container"]
    working_dir: /repo
    env_file:
      - ${TMP_ENV_CI:-.env.ci}
    volumes:
      - ./:/repo
  oathkeeper:
    image: oryd/oathkeeper:v0.40.4-distroless
    ports: []
    extra_hosts: []
    command: serve -c /home/ory/oathkeeper.yml --sqa-opt-out
    volumes:
      - ${HOST_PROJECT_PATH:-.}/dev/ory:/home/ory
  kratos:
    image: oryd/kratos:v1.0.0
    ports: []
    extra_hosts: []
    entrypoint: sh -c
    command: '"kratos migrate sql up -y -e && kratos serve -c /home/ory/kratos.yml --watch-courier --sqa-opt-out"'
    environment:
      DSN: postgres://dbuser:secret@kratos-pg:5432/default?sslmode=disable
    links:
      - kratos-pg:kratos-pg
    volumes:
      - ${HOST_PROJECT_PATH:-.}/dev/ory:/home/ory
  kratos-pg:
    image: postgres:14.1
    ports: []
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=default
  mailslurper:
    image: oryd/mailslurper:latest-smtps
    ports: []

  # Frappe/ERPNext services
  frappe-backend:
    image: frappe/erpnext:v15.85.0
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - frappe-sites:/home/frappe/frappe-bench/sites
      - frappe-logs:/home/frappe/frappe-bench/logs
    environment:
      DB_HOST: mariadb
      DB_PORT: "3306"
      MYSQL_ROOT_PASSWORD: admin
      MARIADB_ROOT_PASSWORD: admin

  frappe-configurator:
    image: frappe/erpnext:v15.85.0
    deploy:
      restart_policy:
        condition: none
    entrypoint:
      - bash
      - -c
    command:
      - >
        ls -1 apps > sites/apps.txt;
        bench set-config -g db_host $$DB_HOST;
        bench set-config -gp db_port $$DB_PORT;
        bench set-config -g redis_cache "redis://$$REDIS_CACHE";
        bench set-config -g redis_queue "redis://$$REDIS_QUEUE";
        bench set-config -g redis_socketio "redis://$$REDIS_QUEUE";
        bench set-config -gp socketio_port $$SOCKETIO_PORT;
    environment:
      DB_HOST: mariadb
      DB_PORT: "3306"
      REDIS_CACHE: redis:6379/1
      REDIS_QUEUE: redis:6379/2
      SOCKETIO_PORT: "9000"
    volumes:
      - frappe-sites:/home/frappe/frappe-bench/sites
      - frappe-logs:/home/frappe/frappe-bench/logs

  frappe-create-site:
    image: frappe/erpnext:v15.85.0
    deploy:
      restart_policy:
        condition: none
    volumes:
      - frappe-sites:/home/frappe/frappe-bench/sites
      - frappe-logs:/home/frappe/frappe-bench/logs
    entrypoint:
      - bash
      - -c
    command:
      - >
        wait-for-it -t 120 mariadb:3306;
        wait-for-it -t 120 redis:6379;
        wait-for-it -t 120 redis:6379;
        export start=`date +%s`;
        until [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".db_host // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_cache // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_queue // empty"` ]];
        do
          echo "Waiting for sites/common_site_config.json to be created";
          sleep 5;
          if (( `date +%s`-start > 120 )); then
            echo "could not find sites/common_site_config.json with required keys";
            exit 1
          fi
        done;
        echo "sites/common_site_config.json found";
        bench new-site --mariadb-user-host-login-scope='%' --admin-password=admin --db-root-username=root --db-root-password=admin --install-app erpnext --set-default frontend;

  mariadb:
    image: mariadb:10.6
    ports: []
    healthcheck:
      test: mysqladmin ping -h localhost --password=admin
      interval: 1s
      retries: 20
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --skip-innodb-read-only-compressed # Temporary fix for MariaDB 10.6
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MARIADB_ROOT_PASSWORD: admin
    volumes:
      - mariadb-data:/var/lib/mysql

  frappe-frontend:
    image: frappe/erpnext:v15.85.0
    ports: ["8080:8080"]
    depends_on:
      - frappe-websocket
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - nginx-entrypoint.sh
    environment:
      BACKEND: frappe-backend:8000
      FRAPPE_SITE_NAME_HEADER: frontend
      SOCKETIO: frappe-websocket:9000
      UPSTREAM_REAL_IP_ADDRESS: 127.0.0.1
      UPSTREAM_REAL_IP_HEADER: X-Forwarded-For
      UPSTREAM_REAL_IP_RECURSIVE: "off"
      PROXY_READ_TIMEOUT: 120
      CLIENT_MAX_BODY_SIZE: 50m
    volumes:
      - frappe-sites:/home/frappe/frappe-bench/sites
      - frappe-logs:/home/frappe/frappe-bench/logs

  frappe-websocket:
    image: frappe/erpnext:v15.85.0
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - node
      - /home/frappe/frappe-bench/apps/frappe/socketio.js
    environment:
      FRAPPE_REDIS_CACHE: redis://redis:6379/1
      FRAPPE_REDIS_QUEUE: redis://redis:6379/2
    volumes:
      - frappe-sites:/home/frappe/frappe-bench/sites
      - frappe-logs:/home/frappe/frappe-bench/logs

volumes:
  mariadb-data:
  frappe-sites:
  frappe-logs:
